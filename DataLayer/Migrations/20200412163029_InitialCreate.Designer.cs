// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication17.Data;

namespace Data_Layer.Migrations
{
    [DbContext(typeof(Contexts))]
    [Migration("20200412163029_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication17.Models.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankName");

                    b.Property<string>("CurrencyAbbreviation");

                    b.Property<string>("CurrencyName");

                    b.Property<string>("IBAN");

                    b.HasKey("Id");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("WebApplication17.Models.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankName");

                    b.Property<string>("CurrencyName");

                    b.Property<string>("IBAN");

                    b.Property<int>("IdBank");

                    b.Property<int>("IdCurrency");

                    b.Property<int>("IdUser");

                    b.Property<double>("Sold");

                    b.HasKey("Id");

                    b.ToTable("BankAccount");
                });

            modelBuilder.Entity("WebApplication17.Models.BankAccountTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Ammount");

                    b.Property<int>("IdBankAccount");

                    b.Property<int>("IdFlatRateFee");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.ToTable("BankAccountTransaction");
                });

            modelBuilder.Entity("WebApplication17.Models.Conversion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AmmountToExchange");

                    b.Property<int>("IdWalletFrom");

                    b.Property<int>("IdWalletTo");

                    b.Property<string>("Percentage");

                    b.HasKey("Id");

                    b.ToTable("Conversion");
                });

            modelBuilder.Entity("WebApplication17.Models.ConversionTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Ammount");

                    b.Property<int>("IdBankAccount");

                    b.Property<int>("IdConversion");

                    b.Property<int>("IdFee");

                    b.HasKey("Id");

                    b.ToTable("ConversionTransaction");
                });

            modelBuilder.Entity("WebApplication17.Models.Crypto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CryptoCurrencyAbbreviation");

                    b.Property<string>("CryptoCurrencyName");

                    b.Property<string>("Refference");

                    b.HasKey("Id");

                    b.ToTable("Crypto");
                });

            modelBuilder.Entity("WebApplication17.Models.CryptoAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CryptoCurrencyName");

                    b.Property<string>("CryptokName");

                    b.Property<int>("IdBankAccount");

                    b.Property<int>("IdCrypto");

                    b.Property<int>("IdCryptoCurrency");

                    b.Property<int>("IdUser");

                    b.Property<string>("Refference");

                    b.Property<double>("Sold");

                    b.HasKey("Id");

                    b.ToTable("CryptoAccount");
                });

            modelBuilder.Entity("WebApplication17.Models.CryptoAccountTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Ammount");

                    b.Property<int>("IdCryptoAccount");

                    b.Property<int>("IdFee");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.ToTable("CryptoAccountTransaction");
                });

            modelBuilder.Entity("WebApplication17.Models.CryptoCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CryptoCurrencyAbbreviation");

                    b.Property<string>("CryptoCurrencyName");

                    b.HasKey("Id");

                    b.ToTable("CryptoCurrency");
                });

            modelBuilder.Entity("WebApplication17.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrencyAbbreviation");

                    b.Property<string>("CurrencyName");

                    b.HasKey("Id");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("WebApplication17.Models.Fee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Obsolete");

                    b.Property<double>("Percentage");

                    b.Property<string>("UserRole");

                    b.HasKey("Id");

                    b.ToTable("Fee");
                });

            modelBuilder.Entity("WebApplication17.Models.FlatRateFee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Ammount");

                    b.Property<bool>("Obsolete");

                    b.Property<string>("UserRole");

                    b.HasKey("Id");

                    b.ToTable("FlatRateFee");
                });

            modelBuilder.Entity("WebApplication17.Models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password");

                    b.Property<int?>("TokenId");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("TokenId");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("WebApplication17.Models.RegisterUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsOver18");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Role");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("RegisterUser");
                });

            modelBuilder.Entity("WebApplication17.Models.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Role");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("TokenGuid");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Token");
                });

            modelBuilder.Entity("WebApplication17.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Confirmed");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsOver18");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("PasswordSalt");

                    b.Property<string>("ReferralId");

                    b.Property<string>("Role");

                    b.Property<string>("Token");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WebApplication17.Models.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdBank");

                    b.Property<int>("IdClientCurrency");

                    b.Property<double>("Sold");

                    b.HasKey("Id");

                    b.ToTable("Wallet");
                });

            modelBuilder.Entity("WebApplication17.Models.Login", b =>
                {
                    b.HasOne("WebApplication17.Models.Token", "Token")
                        .WithMany()
                        .HasForeignKey("TokenId");
                });
#pragma warning restore 612, 618
        }
    }
}
